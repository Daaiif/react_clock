{"version":3,"sources":["components/Clock/Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","timer","setInterval","setState","prevProps","name","props","console","log","clearInterval","toLocaleTimeString","className","style","fontSize","color","React","Component","App","isClockVisible","clockName","Math","ceil","random","showClock","hideClock","setRandomName","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,MAAQC,aAAY,WACvB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,SACzB,OARP,gCAWE,SAAmBK,GACbA,EAAUC,OAASL,KAAKM,MAAMD,MAEhCE,QAAQC,IAAI,wCACLJ,EAAUC,KADL,eACgBL,KAAKM,MAAMD,SAf7C,kCAmBE,WACEI,cAAcT,KAAKC,SApBvB,oBAuBE,WAAU,IACAH,EAASE,KAAKH,MAAdC,KACAO,EAASL,KAAKM,MAAdD,KASR,OACE,oDAEG,IACAP,EAAKY,qBACL,IACD,4BAAQC,UAAU,SAASC,MAZrB,CACNC,SAAU,OACVC,MAAO,QAU0CT,QAxCzD,GAA2BU,IAAMC,WCqElBC,G,kNAlEbpB,MAAQ,CACNqB,gBAAgB,EAChBC,UAAWC,KAAKC,KAAqB,IAAhBD,KAAKE,W,EAc5BC,UAAY,WACV,EAAKpB,SAAS,CACZe,gBAAgB,K,EAIpBM,UAAY,WACV,EAAKrB,SAAS,CACZe,gBAAgB,K,EAIpBO,cAAgB,WACd,EAAKtB,SAAS,CACZgB,UAAWC,KAAKC,KAAqB,IAAhBD,KAAKE,a,uDAzB9B,WAAqB,IAAD,OAClBpB,aAAY,WACV,IAAMJ,EAAO,IAAIC,KAEb,EAAKF,MAAMqB,gBAEbX,QAAQC,IAAIV,EAAKY,wBAElB,O,oBAqBL,WAAU,IAAD,EAC+BV,KAAKH,MAAnCqB,EADD,EACCA,eAAgBC,EADjB,EACiBA,UAExB,OACE,yBAAKR,UAAU,OACb,2CACA,2BACGO,GAAkB,kBAAC,EAAD,CAAOb,KAAMc,KAElC,4BACEO,KAAK,SACLC,QAAS3B,KAAKuB,WAFhB,cAMA,4BACEG,KAAK,SACLC,QAAS3B,KAAKwB,WAFhB,cAMA,4BACEE,KAAK,SACLC,QAAS3B,KAAKyB,eAFhB,wB,GAxDUV,IAAMC,YCDxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.35b04084.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from `\n        + `${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    const style = {\n      strong: {\n        fontSize: '25px',\n        color: 'red',\n      },\n    };\n\n    return (\n      <>\n        Current time:\n        {' '}\n        {date.toLocaleTimeString()}\n        {' '}\n        <strong className=\"random\" style={style.strong}>{name}</strong>\n      </>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: Math.ceil(Math.random() * 100),\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      const date = new Date();\n\n      if (this.state.isClockVisible) {\n        // eslint-disable-next-line no-console\n        console.log(date.toLocaleTimeString());\n      }\n    }, 1000);\n  }\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  setRandomName = () => {\n    this.setState({\n      clockName: Math.ceil(Math.random() * 100),\n    });\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          {isClockVisible && <Clock name={clockName} />}\n        </p>\n        <button\n          type=\"button\"\n          onClick={this.showClock}\n        >\n          Show clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.setRandomName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}